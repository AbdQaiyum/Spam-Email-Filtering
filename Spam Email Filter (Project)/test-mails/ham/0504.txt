adam beberg writes
 on tue  sep  kragen sitaker wrote
  unix acquired nonblocking io in the form of select about  years
  ago and solaris has had the particular aio calls we are discussing
  for many years
 
 select scaling is a joke at best and i know you know that poll is
 only a bit better

not only do i know that the post to which you were responding
explained that with somewhat more detail than a joke  as you
should know but evidently dont poll isnt even a bit better 
in fact its about an order of magnitude worse  for dense file
descriptor sets which is the normal case  except on operating
systems where select isnt a system call but a library routine that
calls poll

  very few applications need the aio calls  essentially only
  highperformance rdbms servers even benefit from them at all and
  most of those have been faking it fine for a while with multiple
  threads or processes  this just provides a modicum of extra
  performance
 
 wrong it makes a huge difference in even what i consider small programs

why dont you explain this in more detail

  although i dont have a copy of the spec handy i think the aio apis
  come from the posix spec ieee std  section  which is
   years old and which i think documented thencurrent practice
  they might be even older than that
 
 yes sgi has a patch to the linux kernel to implement the aio interfaces
 but its still not built in who knows when it will be the point is its
 not portable in either case

you originally said

  could it be after  years without this feature unix finally
  catches up to windows and has io that doesnt sic totally suck for
  nontrivial apps no way

the point  my point the point i was discussing please dont try
to tell me you were trying to make a different point because i dont
care  is that you had no clue what you were talking about unix
hasnt been without this feature and in fact has had it since you
were in elementary school and operating systems without it dont
totally suck for nontrivial apps

for what its worth glibc has actually implemented the aio calls
for a while just in a way that doesnt scale to large numbers of
concurrent io requests  i find references to the glibc
implementation as far back as  and glibc  and i could
probably find much earlier references if i had time
httpsourcesredhatcommllibchackermsghtml

more details at
httpwwwatnfcsiroaupeoplergoochlinuxdocsioeventshtml
details on the sgi patch are at
httposssgicomprojectskaiofaqhtml

  unix has been multiprocess since  and most unix implementations
  have supported multithreading for a decade or more
 
 and most unix is still kindasorta supporting the pthreads posix
 interface each in their own  implementation youre safe if you
 stick to the basics

your original complaint was that unix didnt do multithreading or
multiprogramming well  now that ive pointed out how obviously
idiotic that claim is youve amended your complaint now although
individual unixes do these things well you complain that their
implementations are not entirely conformant with the posix threads
specification  well thats probably true but i havent written
pthreads programs in c much myself so i cant confirm it from my own
experience  but even if its true its not a very good reason to
prefer windows

im sure you can provide examples of bugs in particular threading
implementations  spare us  just shut up

 
kragenpoboxcom       kragen sitaker     httpwwwpoboxcomkragen
edsger wybe dijkstra died in august of   the world has lost a great
man  see httpadvogatoorgpersonraphdiaryhtmlstart and
httpwwwkodefucomgeekarchiveshtml for details

